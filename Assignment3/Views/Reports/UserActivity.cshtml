@model Assignment3.ViewModels.UserActivityViewModel

@{
    ViewData["Title"] = "User Activity Report";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2><i class="fas fa-users"></i> User Activity Report</h2>
            <p class="text-muted">Monitor user engagement and registration patterns</p>
        </div>
        <div class="btn-group" role="group">
            <a asp-action="Dashboard" class="btn btn-outline-primary">
                <i class="fas fa-chart-bar"></i> Dashboard
            </a>
            <a asp-action="EventAnalytics" class="btn btn-outline-info">
                <i class="fas fa-chart-line"></i> Event Analytics
            </a>
        </div>
    </div>

    <!-- User Summary Stats -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card bg-primary text-white">
                <div class="card-body text-center">
                    <h3>@Model.ActiveUsers.Count</h3>
                    <p class="mb-0">Total Active Users</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-success text-white">
                <div class="card-body text-center">
                    <h3>@Model.ActiveUsers.Sum(u => u.TotalRegistrations)</h3>
                    <p class="mb-0">Total Registrations</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-info text-white">
                <div class="card-body text-center">
                    <h3>@(Model.ActiveUsers.Any() ? Model.ActiveUsers.Average(u => u.TotalRegistrations).ToString("F1") : "0")</h3>
                    <p class="mb-0">Avg Registrations/User</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Top Active Users -->
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-star"></i> Most Active Users</h5>
                </div>
                <div class="card-body">
                    @if (Model.ActiveUsers.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th><i class="fas fa-user"></i> User</th>
                                        <th><i class="fas fa-envelope"></i> Email</th>
                                        <th class="text-center"><i class="fas fa-calendar-check"></i> Total Registrations</th>
                                        <th class="text-center"><i class="fas fa-clock"></i> Upcoming Events</th>
                                        <th class="text-center"><i class="fas fa-calendar"></i> Last Registration</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var user in Model.ActiveUsers.Take(10))
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="bg-primary text-white rounded-circle d-flex align-items-center justify-content-center mr-2" 
                                                         style="width: 35px; height: 35px; font-size: 14px; font-weight: bold;">
                                                        @user.UserName?.Substring(0, 1).ToUpper()
                                                    </div>
                                                    <strong>@user.UserName</strong>
                                                </div>
                                            </td>
                                            <td>
                                                <small class="text-muted">@user.Email</small>
                                            </td>
                                            <td class="text-center">
                                                <span class="badge badge-primary badge-pill">@user.TotalRegistrations</span>
                                            </td>
                                            <td class="text-center">
                                                <span class="badge badge-success badge-pill">@user.UpcomingEvents</span>
                                            </td>
                                            <td class="text-center">
                                                <small class="text-muted">
                                                    @(user.LastRegistration?.ToString("MMM dd, yyyy") ?? "N/A")
                                                </small>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        @if (Model.ActiveUsers.Count > 10)
                        {
                            <div class="text-center mt-3">
                                <small class="text-muted">
                                    Showing top 10 users. Total: @Model.ActiveUsers.Count users
                                </small>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-user-slash fa-3x text-muted mb-3"></i>
                            <p class="text-muted">No active users found</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- User Statistics -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-chart-bar"></i> User Statistics</h5>
                </div>
                <div class="card-body">
                    @if (Model.ActiveUsers.Any())
                    {
                        <div class="mb-4">
                            <h6>Registration Distribution</h6>
                            <div class="mt-3">
                                @{
                                    var oneRegistration = Model.ActiveUsers.Count(u => u.TotalRegistrations == 1);
                                    var twoToFive = Model.ActiveUsers.Count(u => u.TotalRegistrations >= 2 && u.TotalRegistrations <= 5);
                                    var moreThanFive = Model.ActiveUsers.Count(u => u.TotalRegistrations > 5);
                                    var total = Model.ActiveUsers.Count;
                                }

                                <div class="mb-3">
                                    <div class="d-flex justify-content-between mb-1">
                                        <small>1 Registration</small>
                                        <small>@oneRegistration users</small>
                                    </div>
                                    <div class="progress" style="height: 6px;">
                                        <div class="progress-bar bg-warning" style="width: @((double)oneRegistration / total * 100)%"></div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <div class="d-flex justify-content-between mb-1">
                                        <small>2-5 Registrations</small>
                                        <small>@twoToFive users</small>
                                    </div>
                                    <div class="progress" style="height: 6px;">
                                        <div class="progress-bar bg-info" style="width: @((double)twoToFive / total * 100)%"></div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <div class="d-flex justify-content-between mb-1">
                                        <small>5+ Registrations</small>
                                        <small>@moreThanFive users</small>
                                    </div>
                                    <div class="progress" style="height: 6px;">
                                        <div class="progress-bar bg-success" style="width: @((double)moreThanFive / total * 100)%"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div>
                            <h6>User Engagement</h6>
                            <div class="row text-center mt-3">
                                <div class="col-6">
                                    <h4 class="text-success">@Model.ActiveUsers.Count(u => u.UpcomingEvents > 0)</h4>
                                    <small class="text-muted">Have Upcoming Events</small>
                                </div>
                                <div class="col-6">
                                    <h4 class="text-primary">@Model.ActiveUsers.Count(u => u.LastRegistration >= DateTime.Now.AddDays(-30))</h4>
                                    <small class="text-muted">Active This Month</small>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No statistics available</p>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Registration Trends Chart -->
    @if (Model.RegistrationTrends.Any())
    {
        <div class="row mt-4">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-chart-line"></i> User Registration Trends (Last 12 Months)</h5>
                    </div>
                    <div class="card-body">
                        <canvas id="registrationTrendsChart" height="80"></canvas>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Export Options -->
    <div class="row mt-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <h5><i class="fas fa-download"></i> Export User Data</h5>
                    <p class="text-muted">Download user activity reports for further analysis.</p>
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-success" onclick="exportUserData()">
                            <i class="fas fa-file-csv"></i> Export to CSV
                        </button>
                        <button type="button" class="btn btn-outline-primary" onclick="printUserReport()">
                            <i class="fas fa-print"></i> Print Report
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Chart.js for Registration Trends -->
@if (Model.RegistrationTrends.Any())
{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('registrationTrendsChart').getContext('2d');
        const registrationTrendsChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.RegistrationTrends.Select(t => $"'{t.Month}'")))],
                datasets: [{
                    label: 'New Users',
                    data: [@string.Join(",", Model.RegistrationTrends.Select(t => t.EventsCount))],
                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                    borderColor: 'rgb(54, 162, 235)',
                    borderWidth: 1
                }, {
                    label: 'Active Users',
                    data: [@string.Join(",", Model.RegistrationTrends.Select(t => t.RegistrationsCount))],
                    backgroundColor: 'rgba(255, 99, 132, 0.5)',
                    borderColor: 'rgb(255, 99, 132)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'User Registration and Activity Trends'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}

<script>
    function exportUserData() {
        let csv = 'User Name,Email,Total Registrations,Upcoming Events,Last Registration\n';
        @foreach (var user in Model.ActiveUsers)
        {
            <text>
            csv += '"@user.UserName","@user.Email",@user.TotalRegistrations,@user.UpcomingEvents,"@(user.LastRegistration?.ToString("yyyy-MM-dd") ?? "N/A")"\n';
            </text>
        }

        const blob = new Blob([csv], { type: 'text/csv' });
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'user_activity_@(DateTime.Now.ToString("yyyyMMdd")).csv';
        a.click();
        window.URL.revokeObjectURL(url);
    }

    function printUserReport() {
        window.print();
    }
</script>

<style>
    @@media print {
        .btn, .card-footer {
            display: none !important;
        }
    }
</style> 