@model IEnumerable<Assignment3.Models.Attendee>

@{
    ViewData["Title"] = "My Event Registrations";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2><i class="fas fa-calendar-check"></i> My Event Registrations</h2>
            <p class="text-muted">View and manage your event registrations</p>
        </div>
        <div class="btn-group" role="group">
            <a href="/" class="btn btn-outline-secondary">
                <i class="fas fa-home"></i> Back to Home
            </a>
        </div>
    </div>

    <!-- Registration Statistics -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body text-center">
                    <h3>@Model.Count()</h3>
                    <p class="mb-0">Total Registrations</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body text-center">
                    <h3>@Model.Count(a => a.Event != null && a.Event.StartTime.HasValue && a.Event.StartTime.Value > DateTime.Now)</h3>
                    <p class="mb-0">Upcoming Events</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body text-center">
                    <h3>@Model.Count(a => a.Event != null && a.Event.EndTime.HasValue && a.Event.EndTime.Value < DateTime.Now)</h3>
                    <p class="mb-0">Past Events</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body text-center">
                    <h3>@Model.Where(a => a.RegistrationTime >= DateTime.Today.AddDays(-30)).Count()</h3>
                    <p class="mb-0">This Month</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Registrations List -->
    <div class="card">
        <div class="card-header">
            <h5><i class="fas fa-list"></i> Your Event Registrations</h5>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover" id="registrationsTable">
                        <thead class="thead-dark">
                            <tr>
                                <th><i class="fas fa-calendar-alt"></i> Event</th>
                                <th class="text-center"><i class="fas fa-clock"></i> Event Date</th>
                                <th class="text-center"><i class="fas fa-map-marker-alt"></i> Location</th>
                                <th class="text-center"><i class="fas fa-calendar-check"></i> Registration Date</th>
                                <th class="text-center"><i class="fas fa-info-circle"></i> Status</th>
                                <th class="text-center"><i class="fas fa-cog"></i> Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var registration in Model.OrderByDescending(a => a.RegistrationTime))
                            {
                                var now = DateTime.Now;
                                var status = "Unknown";
                                var statusClass = "badge-secondary";
                                var canUnregister = false;

                                if (registration.Event != null)
                                {
                                    if (registration.Event.StartTime.HasValue)
                                    {
                                        if (registration.Event.StartTime.Value > now)
                                        {
                                            status = "Upcoming";
                                            statusClass = "badge-success";
                                            canUnregister = true;
                                        }
                                        else if (registration.Event.EndTime.HasValue && registration.Event.EndTime.Value < now)
                                        {
                                            status = "Completed";
                                            statusClass = "badge-info";
                                        }
                                        else
                                        {
                                            status = "In Progress";
                                            statusClass = "badge-warning";
                                        }
                                    }
                                }

                                <tr>
                                    <td>
                                        @if (registration.Event != null)
                                        {
                                            <div>
                                                <strong>@registration.Event.Title</strong>
                                                @if (!string.IsNullOrEmpty(registration.Event.Description))
                                                {
                                                    <br>
                                                    <small class="text-muted">@(registration.Event.Description.Length > 100 ? registration.Event.Description.Substring(0, 100) + "..." : registration.Event.Description)</small>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Event not found</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @if (registration.Event?.StartTime.HasValue == true)
                                        {
                                            <div>
                                                <strong>@registration.Event.StartTime.Value.ToString("MMM dd, yyyy")</strong>
                                            </div>
                                            <small class="text-muted">
                                                @registration.Event.StartTime.Value.ToString("HH:mm")
                                                @if (registration.Event.EndTime.HasValue)
                                                {
                                                    <text> - @registration.Event.EndTime.Value.ToString("HH:mm")</text>
                                                }
                                            </small>
                                        }
                                        else
                                        {
                                            <span class="text-muted">TBD</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @(registration.Event?.Location ?? "TBD")
                                    </td>
                                    <td class="text-center">
                                        @if (registration.RegistrationTime.HasValue)
                                        {
                                            <div>
                                                <strong>@registration.RegistrationTime.Value.ToString("MMM dd, yyyy")</strong>
                                            </div>
                                            <small class="text-muted">
                                                @registration.RegistrationTime.Value.ToString("HH:mm")
                                            </small>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Unknown</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <span class="badge @statusClass">@status</span>
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group btn-group-sm" role="group">
                                            @if (registration.Event != null)
                                            {
                                                <a href="/Events/Details/@registration.Event.EventID" class="btn btn-outline-primary" title="View Event">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                            }
                                            @if (canUnregister)
                                            {
                                                <form asp-action="Unregister" asp-route-eventId="@registration.EventID" method="post" style="display: inline;">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-outline-warning" title="Unregister" 
                                                            onclick="return confirm('Are you sure you want to unregister from this event?')">
                                                        <i class="fas fa-user-minus"></i>
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-calendar-times fa-5x text-muted mb-3"></i>
                    <h3 class="text-muted">No Registrations Found</h3>
                    <p class="lead text-muted">You haven't registered for any events yet.</p>
                    <a href="/Events" class="btn btn-primary">
                        <i class="fas fa-calendar-plus"></i> Browse Events
                    </a>
                </div>
            }
        </div>
    </div>

    <!-- Quick Actions -->
    @if (Model.Any())
    {
        <div class="card mt-4">
            <div class="card-body">
                <h5><i class="fas fa-bolt"></i> Quick Actions</h5>
                <div class="btn-group" role="group">
                    <a href="/Events" class="btn btn-primary">
                        <i class="fas fa-calendar-plus"></i> Browse More Events
                    </a>
                    <button onclick="exportToCSV()" class="btn btn-success">
                        <i class="fas fa-file-csv"></i> Export My Registrations
                    </button>
                    <button onclick="printRegistrations()" class="btn btn-info">
                        <i class="fas fa-print"></i> Print List
                    </button>
                </div>
            </div>
        </div>
    }
</div>

<!-- DataTables -->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap4.min.css">
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap4.min.js"></script>

<script>
    $(document).ready(function() {
        $('#registrationsTable').DataTable({
            "order": [[ 3, "desc" ]], // Sort by registration date descending
            "pageLength": 25,
            "responsive": true,
            "language": {
                "search": "Search registrations:",
                "lengthMenu": "Show _MENU_ registrations per page",
                "info": "Showing _START_ to _END_ of _TOTAL_ registrations"
            },
            "columnDefs": [
                { "orderable": false, "targets": [5] } // Disable sorting on Actions column
            ]
        });
    });

    function exportToCSV() {
        // Create CSV content
        let csv = 'Event Title,Event Date,Location,Registration Date,Status\n';
        @foreach (var registration in Model)
        {
            var status = "Unknown";
            var now = DateTime.Now;
            if (registration.Event?.StartTime.HasValue == true)
            {
                if (registration.Event.StartTime.Value > now)
                    status = "Upcoming";
                else if (registration.Event.EndTime.HasValue && registration.Event.EndTime.Value < now)
                    status = "Completed";
                else
                    status = "In Progress";
            }
            
            <text>
            csv += '@Html.Raw(registration.Event?.Title?.Replace("\"", "\"\"") ?? "Unknown"),"@(registration.Event?.StartTime?.ToString("yyyy-MM-dd HH:mm") ?? "TBD")","@Html.Raw(registration.Event?.Location?.Replace("\"", "\"\"") ?? "TBD")","@(registration.RegistrationTime?.ToString("yyyy-MM-dd HH:mm") ?? "Unknown")","@status"\n';
            </text>
        }

        // Download CSV
        const blob = new Blob([csv], { type: 'text/csv' });
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'my_registrations_@(DateTime.Now.ToString("yyyyMMdd")).csv';
        a.click();
        window.URL.revokeObjectURL(url);
    }

    function printRegistrations() {
        window.print();
    }
</script>

<style>
    .table td {
        vertical-align: middle;
    }

    .btn-group-sm .btn {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }

    @@media print {
        .btn-group, .no-print {
            display: none !important;
        }
    }
</style> 