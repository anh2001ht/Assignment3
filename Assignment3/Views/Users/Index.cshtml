@model List<Assignment3.ViewModels.UserViewModel>

@{
    ViewData["Title"] = "Users Management";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2><i class="fas fa-users"></i> Users Management</h2>
            <p class="text-muted">Manage system users and their access</p>
        </div>
        <div class="btn-group" role="group">
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i> Add New User
            </a>
            <a href="/" class="btn btn-outline-secondary">
                <i class="fas fa-home"></i> Back to Home
            </a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle"></i> @TempData["ErrorMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <!-- User Statistics -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body text-center">
                    <h3>@Model.Count</h3>
                    <p class="mb-0">Total Users</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body text-center">
                    <h3>@Model.Count(u => u.UpcomingEvents > 0)</h3>
                    <p class="mb-0">Active Users</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body text-center">
                    <h3>@Model.Sum(u => u.TotalRegistrations)</h3>
                    <p class="mb-0">Total Registrations</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body text-center">
                    <h3>@(Model.Any() ? Math.Round(Model.Average(u => u.TotalRegistrations), 1) : 0)</h3>
                    <p class="mb-0">Avg Registrations</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Users Table -->
    <div class="card">
        <div class="card-header">
            <h5><i class="fas fa-table"></i> All Users</h5>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover" id="usersTable">
                        <thead class="thead-dark">
                            <tr>
                                <th><i class="fas fa-user"></i> User</th>
                                <th class="text-center"><i class="fas fa-envelope"></i> Email</th>
                                <th class="text-center"><i class="fas fa-shield-alt"></i> Role</th>
                                <th class="text-center"><i class="fas fa-calendar-check"></i> Registrations</th>
                                <th class="text-center"><i class="fas fa-calendar-alt"></i> Upcoming Events</th>
                                <th class="text-center"><i class="fas fa-clock"></i> Last Activity</th>
                                <th class="text-center"><i class="fas fa-cog"></i> Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                <tr>
                                    <td>
                                        <div>
                                            <strong>@user.FullName</strong>
                                            <br>
                                            <small class="text-muted">@user.Username</small>
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        @if (!string.IsNullOrEmpty(user.Email))
                                        {
                                            <a href="mailto:@user.Email" class="text-decoration-none">
                                                <i class="fas fa-envelope"></i> @user.Email
                                            </a>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Not provided</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @if (!string.IsNullOrEmpty(user.Role))
                                        {
                                            var badgeClass = user.Role.ToLower() switch
                                            {
                                                "admin" => "badge-danger",
                                                "eventmanager" => "badge-warning",
                                                "user" => "badge-primary",
                                                _ => "badge-secondary"
                                            };
                                            <span class="badge @badgeClass">@user.Role</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-secondary">User</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <span class="badge badge-info badge-lg">@user.TotalRegistrations</span>
                                    </td>
                                    <td class="text-center">
                                        @if (user.UpcomingEvents > 0)
                                        {
                                            <span class="badge badge-success">@user.UpcomingEvents</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">None</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @if (user.LastActivity.HasValue)
                                        {
                                            <small class="text-muted">
                                                @user.LastActivity.Value.ToString("MMM dd, yyyy")
                                                <br>
                                                @user.LastActivity.Value.ToString("HH:mm")
                                            </small>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Never</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group btn-group-sm" role="group">
                                            <a asp-action="Details" asp-route-id="@user.UserID" class="btn btn-outline-info" title="View Details">
                                                <i class="fas fa-eye"></i>Details
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@user.UserID" class="btn btn-outline-warning" title="Edit User">
                                                <i class="fas fa-edit"></i>Edit
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@user.UserID" class="btn btn-outline-danger" title="Delete User">
                                                <i class="fas fa-trash"></i>Delete
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-users fa-5x text-muted mb-3"></i>
                    <h3 class="text-muted">No Users Found</h3>
                    <p class="lead text-muted">There are no users in the system yet.</p>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Add First User
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- DataTables for sorting and filtering -->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap4.min.css">
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap4.min.js"></script>

<script>
    $(document).ready(function() {
        $('#usersTable').DataTable({
            "order": [[ 0, "asc" ]], // Sort by name ascending
            "pageLength": 25,
            "responsive": true,
            "language": {
                "search": "Search users:",
                "lengthMenu": "Show _MENU_ users per page",
                "info": "Showing _START_ to _END_ of _TOTAL_ users"
            },
            "columnDefs": [
                { "orderable": false, "targets": [6] } // Disable sorting on Actions column
            ]
        });
    });
</script>

<style>
    .badge-lg {
        font-size: 1rem;
        padding: 0.5rem 0.75rem;
    }

    .table td {
        vertical-align: middle;
    }

    .btn-group-sm .btn {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }
</style> 