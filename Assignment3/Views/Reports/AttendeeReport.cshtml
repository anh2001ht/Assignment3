@model List<Assignment3.ViewModels.AttendeeReportViewModel>

@{
    ViewData["Title"] = "Attendee Report";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2><i class="fas fa-users"></i> Attendee Report</h2>
            <p class="text-muted">Comprehensive overview of all event attendees</p>
        </div>
        <div class="btn-group" role="group">
            <a asp-action="Dashboard" class="btn btn-outline-primary">
                <i class="fas fa-chart-bar"></i> Dashboard
            </a>
            <a asp-action="ExportAttendeeReport" class="btn btn-outline-success">
                <i class="fas fa-download"></i> Export CSV
            </a>
        </div>
    </div>

    <!-- Summary Statistics -->
    @if (Model.Any())
    {
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card bg-success text-white">
                    <div class="card-body text-center">
                        <h3>@Model.Count</h3>
                        <p class="mb-0">Total Registrations</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-info text-white">
                    <div class="card-body text-center">
                        <h3>@Model.Select(a => a.AttendeeEmail).Distinct().Count()</h3>
                        <p class="mb-0">Unique Attendees</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-primary text-white">
                    <div class="card-body text-center">
                        <h3>@Model.Select(a => a.EventTitle).Distinct().Count()</h3>
                        <p class="mb-0">Events with Attendees</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-warning text-white">
                    <div class="card-body text-center">
                        <h3>@Model.Count(a => a.RegistrationTime >= DateTime.Now.AddDays(-7))</h3>
                        <p class="mb-0">Recent Registrations</p>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Attendees Table -->
    <div class="card">
        <div class="card-header">
            <h5><i class="fas fa-list"></i> Attendee Details</h5>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover" id="attendeesTable">
                        <thead class="thead-dark">
                            <tr>
                                <th><i class="fas fa-user"></i> Attendee</th>
                                <th><i class="fas fa-envelope"></i> Email</th>
                                <th><i class="fas fa-calendar-alt"></i> Event</th>
                                <th><i class="fas fa-clock"></i> Event Date</th>
                                <th><i class="fas fa-calendar-check"></i> Registration Date</th>
                                <th><i class="fas fa-user-tag"></i> User Account</th>
                                <th class="text-center"><i class="fas fa-cog"></i> Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var attendee in Model.OrderByDescending(a => a.RegistrationTime))
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="bg-primary text-white rounded-circle d-flex align-items-center justify-content-center mr-2" 
                                                 style="width: 35px; height: 35px; font-size: 14px; font-weight: bold;">
                                                @attendee.AttendeeName?.Substring(0, 1).ToUpper()
                                            </div>
                                            <strong>@attendee.AttendeeName</strong>
                                        </div>
                                    </td>
                                    <td>
                                        <a href="mailto:@attendee.AttendeeEmail" class="text-decoration-none">
                                            @attendee.AttendeeEmail
                                        </a>
                                    </td>
                                    <td>
                                        <strong>@attendee.EventTitle</strong>
                                    </td>
                                    <td>
                                        <div>
                                            <strong>@attendee.EventDate.ToString("MMM dd, yyyy")</strong>
                                        </div>
                                        <small class="text-muted">@attendee.EventDate.ToString("hh:mm tt")</small>
                                    </td>
                                    <td>
                                        <div>
                                            <strong>@attendee.RegistrationTime.ToString("MMM dd, yyyy")</strong>
                                        </div>
                                        <small class="text-muted">@attendee.RegistrationTime.ToString("hh:mm tt")</small>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(attendee.UserName))
                                        {
                                            <span class="badge badge-info">@attendee.UserName</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-secondary">Guest</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group btn-group-sm" role="group">
                                            <a href="mailto:@attendee.AttendeeEmail" class="btn btn-outline-primary" title="Send Email">
                                                <i class="fas fa-envelope"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-user-slash fa-5x text-muted mb-3"></i>
                    <h3 class="text-muted">No Attendees Found</h3>
                    <p class="lead text-muted">There are no attendee registrations to display.</p>
                </div>
            }
        </div>
    </div>

    <!-- Registration Trends -->
    @if (Model.Any())
    {
        <div class="row mt-4">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-chart-line"></i> Registration Trends</h5>
                    </div>
                    <div class="card-body">
                        @{
                            var last30Days = Model.Where(a => a.RegistrationTime >= DateTime.Now.AddDays(-30)).Count();
                            var last7Days = Model.Where(a => a.RegistrationTime >= DateTime.Now.AddDays(-7)).Count();
                            var today = Model.Where(a => a.RegistrationTime.Date == DateTime.Today).Count();
                        }
                        
                        <div class="mb-3">
                            <div class="d-flex justify-content-between mb-1">
                                <span>Today</span>
                                <strong>@today registrations</strong>
                            </div>
                            <div class="progress" style="height: 8px;">
                                <div class="progress-bar bg-success" style="width: @(last30Days > 0 ? (double)today / last30Days * 100 : 0)%"></div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <div class="d-flex justify-content-between mb-1">
                                <span>Last 7 Days</span>
                                <strong>@last7Days registrations</strong>
                            </div>
                            <div class="progress" style="height: 8px;">
                                <div class="progress-bar bg-info" style="width: @(last30Days > 0 ? (double)last7Days / last30Days * 100 : 0)%"></div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <div class="d-flex justify-content-between mb-1">
                                <span>Last 30 Days</span>
                                <strong>@last30Days registrations</strong>
                            </div>
                            <div class="progress" style="height: 8px;">
                                <div class="progress-bar bg-primary" style="width: 100%"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-chart-pie"></i> Top Events by Attendance</h5>
                    </div>
                    <div class="card-body">
                        @{
                            var topEvents = Model.GroupBy(a => a.EventTitle)
                                                 .Select(g => new { EventTitle = g.Key, Count = g.Count() })
                                                 .OrderByDescending(e => e.Count)
                                                 .Take(5)
                                                 .ToList();
                        }
                        
                        @foreach (var eventGroup in topEvents)
                        {
                            <div class="mb-3">
                                <div class="d-flex justify-content-between mb-1">
                                    <span><strong>@eventGroup.EventTitle</strong></span>
                                    <span class="badge badge-primary">@eventGroup.Count attendees</span>
                                </div>
                                <div class="progress" style="height: 6px;">
                                    <div class="progress-bar bg-primary" 
                                         style="width: @((double)eventGroup.Count / topEvents.Max(e => e.Count) * 100)%"></div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Export Options -->
    @if (Model.Any())
    {
        <div class="card mt-4">
            <div class="card-body">
                <h5><i class="fas fa-download"></i> Export Options</h5>
                <p class="text-muted">Download the attendee report in various formats.</p>
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-outline-success" onclick="exportToCSV()">
                        <i class="fas fa-file-csv"></i> Export to CSV
                    </button>
                    <button type="button" class="btn btn-outline-primary" onclick="printReport()">
                        <i class="fas fa-print"></i> Print Report
                    </button>
                    <a asp-action="ExportAttendeeReport" class="btn btn-outline-secondary">
                        <i class="fas fa-download"></i> Download CSV File
                    </a>
                    <button type="button" class="btn btn-outline-info" onclick="emailAllAttendees()">
                        <i class="fas fa-envelope-open"></i> Email All Attendees
                    </button>
                </div>
            </div>
        </div>
    }
</div>

<!-- DataTables for sorting and filtering -->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap4.min.css">
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap4.min.js"></script>

<script>
    $(document).ready(function() {
        $('#attendeesTable').DataTable({
            "order": [[ 4, "desc" ]], // Sort by registration time descending
            "pageLength": 25,
            "responsive": true,
            "language": {
                "search": "Search attendees:",
                "lengthMenu": "Show _MENU_ attendees per page",
                "info": "Showing _START_ to _END_ of _TOTAL_ attendees"
            }
        });
    });

    function exportToCSV() {
        let csv = 'Attendee Name,Email,Event Title,Event Date,Registration Date,User Account\n';
        @foreach (var attendee in Model)
        {
            <text>
            csv += '"@attendee.AttendeeName","@attendee.AttendeeEmail","@attendee.EventTitle","@attendee.EventDate.ToString("yyyy-MM-dd HH:mm")","@attendee.RegistrationTime.ToString("yyyy-MM-dd HH:mm")","@(attendee.UserName ?? "Guest")"\n';
            </text>
        }

        const blob = new Blob([csv], { type: 'text/csv' });
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'attendee_report_@(DateTime.Now.ToString("yyyyMMdd")).csv';
        a.click();
        window.URL.revokeObjectURL(url);
    }

    function printReport() {
        window.print();
    }

    function emailAllAttendees() {
        const emails = [@Html.Raw(string.Join(",", Model.Select(a => $"'{a.AttendeeEmail}'").Distinct()))];
        const subject = encodeURIComponent('Event Management System - Important Announcement');
        const body = encodeURIComponent('Hello,\\n\\nWe have an important announcement regarding our events.\\n\\nBest regards,\\nEvent Management Team');
        
        if (emails.length > 0) {
            window.location.href = `mailto:?bcc=${emails.join(',')}&subject=${subject}&body=${body}`;
        }
    }
</script>

<style>
    @@media print {
        .btn, .card-footer, .dataTables_wrapper .dataTables_length,
        .dataTables_wrapper .dataTables_filter, .dataTables_wrapper .dataTables_info,
        .dataTables_wrapper .dataTables_paginate {
            display: none !important;
        }
        
        .table {
            font-size: 12px;
        }
    }
</style> 